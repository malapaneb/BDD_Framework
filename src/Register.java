package platforms.ui.Web.StepDefinitions;

import com.aventstack.extentreports.model.Log;
import cucumber.api.PendingException;
import cucumber.api.java.Before;
import cucumber.api.java.en.And;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import org.joda.time.Seconds;
import org.openqa.selenium.By;
import org.openqa.selenium.*;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.asserts.SoftAssert;
import utils.*;
import org.apache.log4j.Logger;

import java.util.concurrent.TimeUnit;

public class Register extends Utils {
    WebDriver driver = null;
 private String  xmlRegister = "src/test/java/objectrepository/register.xml";

   String firstname = null;
    String lastname = null;
    private static Logger log = Logger.getLogger(Register.class);
    //DC_ChatPage chatPage = PageFactory.initElements(driver, DC_ChatPage.class);
   // WebDriverWait wait = new WebDriverWait(driver,10);
    //public static CommonFunctions wc = PageFactory.initElements(driver, CommonFunctions.class);




    @Given("^User launch SimplyBiz \"([^\"]*)\" web application$")
    public void user_launch_SimplyBiz_web_application(String arg1) throws Throwable {
        String baseURL = null;

            Thread.sleep(5000);
        System.out.println("Step1");
        if (arg1.toLowerCase().equalsIgnoreCase("lifecyclewizard"))
        {
            baseURL  = getConfigPropertyValue("./Framework.properties", "SimplyBizlifecycleURL");

        }
        else {

            if (arg1.equalsIgnoreCase("Admin"))
            {
                baseURL = getConfigPropertyValue("./Framework.properties", "SimplyBizURL")+arg1;
            }
            else if (arg1.equalsIgnoreCase("dashboard"))
            {
                baseURL = getConfigPropertyValue("./Framework.properties", "SimplyBizURL")+arg1;

            }
            else {
                baseURL = getConfigPropertyValue("./Framework.properties", "SimplyBizURL");
            }

        }
            System.out.println("Step2");

        try {
           if (clsConstants.driver.toString().contains(null)) {


           }
       }
       catch (Exception e)
        {

             driver = Setupdriver.initializeWedriver("Chrome", baseURL);
        }
        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
      //  driver.manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);
     //   clsConstants.driver = driver;

        for(int i = 0;i<50000;i++)
        {
         //   System.out.println("loop");
        }
     if (driver.findElement(By.xpath("//*[@id=\"simplybiz_header\"]/logo/img[1]")).isDisplayed()== true) {
      Assert.assertTrue(true);
     }
      else
     {
      Assert.fail("Not logged in");
     }
      try {
          if (driver.findElement(By.xpath("//*[@id=\"comingSoonModal\"]/div/div/div[1]/div/h2")).isDisplayed() == true) {

              for (int i = 0; i < 50000; i++) {
                  //   System.out.println("loop");
              }
              //    driver.findElement(By.xpath("//*[@id=\"comingSoonModal\"]/div/div/div[1]/div/h2")).sendKeys(Keys.ESCAPE);
              driver.findElement(By.xpath("//*[@id=\"comingSoonModal\"]/div/div/div[1]/button/span")).click();
          }
      }
      catch(Exception e)
        {}
    }

    @And("^User Selects quest Icon and clicks on Sign up here link$")
    public void user_Selects_quest_Icon_and_clicks_on_Sign_up_here_link() throws Throwable
    {
        Thread.sleep(5000);
     ObjMethod.click("iconQuest",xmlRegister);

        Thread.sleep(50000);
   // ObjMethod.click("signuphere");

       clsConstants.driver.findElement(By.xpath("//span[contains(text(),'Sign up here')]")).click();
    }

    @And("^User enters \"([^\"]*)\", \"([^\"]*)\",\"([^\"]*)\", \"([^\"]*)\" and \"([^\"]*)\"$")
    public void user_enters_and(String arg1, String arg2, String arg3, String arg4, String arg5) throws Throwable {

        String emailpre = CommonFunctions.getAlphaNumericString(5);
        String fnamepre = CommonFunctions.getAlphaNumericString(4);
        String email;
        if (arg3.equalsIgnoreCase("AutoGenerated"))
        {
            email =   emailpre+arg3+"@nedbank.co.za";
            writeToTxtFile( "NewCustomerEmailAdress.txt",email);
        }
        else
        {
            email = arg3;
        }

        clsConstants.NewcustomerEmail = email;
        clsConstants.firstname = arg1;
        clsConstants.lastname = arg2;

             ObjMethod.setText("firstname",fnamepre+arg1,xmlRegister);
             ObjMethod.setText("lastname",arg2,xmlRegister);
             ObjMethod.setText("email",email,xmlRegister);
             ObjMethod.setText("phone",arg4,xmlRegister);
             ObjMethod.setText("password",arg5,xmlRegister);
             writeToTxtFile( "NewCustomerPassword.txt",arg5);
    }

    @And("^User Selects the terms and conditions and clicks on Next button$")
    public void user_Selects_the_terms_and_conditions_and_clicks_on_Next_button() throws Throwable {
        ObjMethod.click("termsandconditions",xmlRegister);
     ObjMethod.click("next",xmlRegister);
    }

    @And("^User selects \"([^\"]*)\" value and clicks Next button$")
    public void user_selects_value_and_clicks_Next_button(String arg1) throws Throwable {
        ObjMethod.click("newbusinessowner",xmlRegister);
         ObjMethod.click("sbNextbn",xmlRegister);
    }

    @And("^User enters \"([^\"]*)\", \"([^\"]*)\",\"([^\"]*)\", \"([^\"]*)\"$")
    public void user_enters(String arg1, String arg2, String arg3, String arg4) throws Throwable {
        String companyname = arg1 + Timestamp();
        ObjMethod.setText("companyname",arg1,xmlRegister);
     ObjMethod.selecttext("industry",arg2,xmlRegister);
     ObjMethod.selecttext("telluswhyyouhavejoined",arg3,xmlRegister);
     ObjMethod.setText("Tellusmoreaboutyourself",arg4,xmlRegister);

    }

    @And("^User clicks Next button$")
    public void user_clicks_Next_button() throws Throwable {
        Thread.sleep(10000);
          //  ObjMethod.click("nextcompanypg",xmlRegister);
        JavascriptExecutor js = (JavascriptExecutor) clsConstants.driver;
        js.executeScript("window.scrollBy(0,1000)");

        WebElement Element =  clsConstants.driver.findElement(By.xpath("//*[@id=\"step-3\"]/div[1]/div[3]/div/button[2]"));

        //This will scroll the page till the element is found
        js.executeScript("arguments[0].scrollIntoView();", Element);


        clsConstants.driver.findElement(By.xpath("//*[@id=\"step-3\"]/div[1]/div[3]/div/button[2]")).click();

    }




    @And("^System displays text \"([^\"]*)\"$")
    public void system_displays_text(String arg1) throws Throwable {

        if (arg1.equalsIgnoreCase("You are almost done"))
        {
            SoftAssert soft = new SoftAssert();
            soft.assertTrue(true);
            String vText = ObjMethod.gettext("text_youarealmostdone", xmlRegister);
            Assert.assertEquals(arg1, vText);
        }
        else {
            Assert.assertEquals(driver.findElement(By.xpath("//*[@id='lifecycle-home']/div[1]/div/div/div[1]/h2")).getAttribute("innerText").equalsIgnoreCase(arg1), true);
        }
    }

    @When("^User clicks Submit button$")
    public void user_clicks_Submit_button() throws Throwable {
        Thread.sleep(5000);
        ObjMethod.click("submit",xmlRegister);
    }


    @Then("^page is displayed with \"([^\"]*)\"$")
    public void register_page_is_displayed_with(String arg1) throws Throwable {
        Assert.assertEquals(clsConstants.driver.getPageSource().contains("Your registration has been successfully completed"),true);
    }
    @Then("^User clicks button Continue$")
    public void User_Clicks_Continue_Button() throws Throwable
    {
        ObjMethod.click("btnregcontinue",xmlRegister);
    }

    @Then("^Congratulations page is displayed$")
    public void congratulations_page_is_displayed() throws Throwable {
                Thread.sleep(5000);
               Assert.assertEquals(clsConstants.driver.getPageSource().contains("Congratulations"),true);

    }

    @And("^User is asked to enter code$")
    public void user_is_asked_to_enter_code() throws Throwable {

    }



    @Given("^Admin User is logged in successfully$")
    public void admin_User_is_logged_in_successfully() throws Throwable {
        driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
      //  Thread.sleep(10000);
  //      ObjMethod.click("iconQuest",xmlRegister);

   //     driver.findElement(By.xpath("//li[@class='header']//img[@class='rounded-circle']")).click();
      //  ObjMethod.click("iconQuest1");
        Thread.sleep(2000);
        Assert.assertEquals(clsConstants.driver.getPageSource().contains("Dashboard"),true);
    }

    @And("^User navigates to Dashboard and selects customers$")
    public void user_navigates_to_Dashboard_and_selects_customers() throws Throwable {

     //   ObjMethod.click("customers");
        Thread.sleep(5000);
        driver.findElement(By.xpath("//body[@class='skin-blue sidebar-mini']/div[@class='wrapper']/div[@class='main-sidebar']/div[@class='sidebar']/ul[@class='sidebar-menu tree']/li[4]/a[1]/span[1]")).click();
      //  ObjMethod.click("cutomerssubmenu");
        driver.findElement(By.xpath("//html/body/div[3]/div[2]/div/ul/li[4]/ul/li[1]/a/span")).click();



    }
    @And("^User enters customer \"([^\"]*)\" and \"([^\"]*)\" that needs to be activated and clicks search button$")
    public void user_enters_customer_and_that_needs_to_be_activated_and_clicks_search_button(String arg1, String arg2) throws Throwable {
/*        if (clsConstants.firstname == null)
        {firstname = arg1;}
        else
        {firstname = clsConstants.firstname;}
        if (clsConstants.lastname == null)
        {lastname = arg2;}
        else
        {lastname = clsConstants.lastname;}

        driver.findElement(By.xpath("//input[@id='SearchFirstName']")).sendKeys(firstname);
        driver.findElement(By.xpath("//input[@id='SearchLastName']")).sendKeys(lastname);*/

        String CustEmail = readtxtFile( "NewCustomerEmailAdress.txt");
        driver.findElement(By.id("SearchEmail")).sendKeys(CustEmail);
        driver.findElement(By.xpath("//button[@id='search-customers']")).click();
        //   ObjMethod.setText("searchfirstname",firstname);
   //     ObjMethod.setText("searchlastname",lastname);

        //   ObjMethod.click("searchbutton");
    }



    @And("^User Selects Customer and clicks edit button$")
    public void user_Selects_Customer_and_clicks_edit_button() throws Throwable {
        Thread.sleep(5000);
      //alert must be fixed first
            ObjMethod.click("editbutton",xmlRegister);
    //   clsConstants.driver.findElement(By.xpath("//*[@id=\"customers-grid\"]/table/tbody/tr/td[11]/a")).click();
    }

    @And("^User selects active checkbox$")
    public void user_selects_active_checkbox() throws Throwable {
        Thread.sleep(5000);
        ObjMethod.click("active",xmlRegister);
    }

    @When("^User clicks save button$")
    public void user_clicks_save_button() throws Throwable {
     //   WebDriverWait wait = new WebDriverWait(clsConstants.driver, 30);
  //     By checkButton = By.xpath("//*[@id=\"fundee-details\"]/div[5]/div/button[1]");

// get the "Add Item" element
  //      WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(checkButton));
    //    ObjMethod.click("savebutton",xmlRegister);
        //  ObjMethod.click("nextcompanypg",xmlRegister);
        Thread.sleep(2000);
        JavascriptExecutor js = (JavascriptExecutor) clsConstants.driver;
        js.executeScript("window.scrollBy(0,-1000)");

//        WebElement Element =  clsConstants.driver.findElement(By.xpath("//*[@id=\"fundee-details\"]/div[5]/div/button[1]"));

        //This will scroll the page till the element is found
  //      js.executeScript("arguments[0].scrollIntoView();", Element);
      Thread.sleep(2000);
    //    clsConstants.driver.findElement(By.xpath("//button[contains(.,' Save')]")).click();
    //    clsConstants.driver.findElement(By.cssSelector("body.skin-blue.sidebar-mini.advanced-settings-mode:nth-child(2) div.wrapper:nth-child(3) div.content-wrapper div:nth-child(1) form:nth-child(1) div.content-header.clearfix:nth-child(1) div.pull-right > button.btn.bg-blue:nth-child(2)")).click();
      clsConstants.driver.findElement(By.name("save-continue")).click();
        }

    @Then("^The system displays message \"([^\"]*)\"$")
    public void the_system_displays_message(String arg1) throws Throwable {
        Thread.sleep(5000);
       Assert.assertEquals(clsConstants.driver.getPageSource().contains(arg1),true);
    }
    @Then("^User Closes the Browser$")
    public void user_Closes_the_Browser() throws Throwable {
        clsConstants.driver.close();
        clsConstants.driver = null;

    }


    @Given("^User clicks link Reset it here$")
    public void user_clicks_link_Reset_it_here() throws Throwable {
        Thread.sleep(5000);
        clsConstants.driver.findElement(By.xpath("//*[@id='simplybiz_header']/user-wrapper/profile-btn/img")).click();
        Thread.sleep(5000);
        clsConstants.driver.findElement(By.xpath("/html/body/div[3]/div[1]/div/div[1]/form/div/div[1]/div[2]/div[3]/a[1]/span")).click();
    }

    @Given("^User populates email address \"([^\"]*)\"$")
    public void user_populates_email_address(String arg1) throws Throwable {
        Thread.sleep(5000);
        if (arg1.equalsIgnoreCase("AutoGenerated")) {
            clsConstants.driver.findElement(By.xpath("(//input[@id='Email'])[2]")).sendKeys(clsConstants.NewcustomerEmail);
        }
        else
        { clsConstants.driver.findElement(By.xpath("(//input[@id='Email'])[2]")).sendKeys(arg1);
        }
      //  clsConstants.driver.findElement(By.xpath("//body/div[3]/div[3]/div[1]/div[1]/div[1]/form[1]/div[1]/div[1]/div[2]/div[1]/input[1]")).sendKeys(arg1);

    }

    @When("^User clicks on button recover$")
    public void user_clicks_on_button_recover() throws Throwable {
       clsConstants.driver.findElement(By.xpath("//button[@name='send-email']")).click();
        //clsConstants.driver.findElement(By.xpath("/html/body/div[3]/div[3]/div/div/div/form/div/div[1]/div[2]/div[2]/button")).click();
    }

    @Then("^message is displayed \"([^\"]*)\"$")
    public void message_is_displayed(String arg1) throws Throwable {
        Assert.assertEquals(clsConstants.driver.getPageSource().contains(arg1),true);
    }


    @When("^User clicks Submit Review button$")
    public void userClicksSubmitReviewButton() {
        clsConstants.driver.findElement(By.xpath("//button[@id='submitFundeeReview']")).click();
    }

    @And("^User navigates to Dashboard and selects catalog, funding, then fundees and all$")
    public void userNavigatesToDashboardAndSelectsCatalogFundingThenFundeesAndAll() {

        clsConstants.driver.findElement(By.xpath("//body[@class='skin-blue sidebar-mini']/div[@class='wrapper']/div[@class='main-sidebar']/div[@class='sidebar']/ul[@class='sidebar-menu tree']/li[4]/a[1]/span[1]")).click();
        clsConstants.driver.findElement(By.xpath("//body[1]/div[3]/div[2]/div[1]/ul[1]/li[2]/a[1]/span[1]")).click();
        clsConstants.driver.findElement(By.xpath("//span[contains(text(),'Funding')]")).click();
        clsConstants.driver.findElement(By.xpath("//span[contains(text(),'Fundees')]")).click();
        clsConstants.driver.findElement(By.xpath("//body/div[3]/div[2]/div[1]/ul[1]/li[2]/ul[1]/li[3]/ul[1]/li[2]/ul[1]/li[1]/a[1]")).click();
    }

    @And("^User searches for product \"([^\"]*)\" and clicks on search button and clicks edit button$")
    public void userSearchesForProductAndClicksOnSearchButtonAndClicksEditButton(String arg0) throws Throwable {
        // Write code here that turns the phrase above into concrete actions
        if (clsConstants.pitchDeckName.equalsIgnoreCase( "constantisnull"))
        {
            clsConstants.driver.findElement(By.xpath("//input[@id='SearchProductName']")).sendKeys(arg0);
        }
            else
        {
            clsConstants.driver.findElement(By.xpath("//input[@id='SearchProductName']")).sendKeys(clsConstants.pitchDeckName);
        }
        clsConstants.driver.findElement(By.xpath("//button[@id='search-products']")).click();

       Thread.sleep(3000);
        clsConstants.driver.findElement(By.xpath("//tbody/tr[1]/td[9]/a[1]")).click();

    }

    @And("^User clicks on tab review fundee message and sets field status to active$")
    public void userClicksOnTabReviewFundeeMessageAndSetsFieldStatusToActive() throws Throwable {
        Thread.sleep(3000);
        clsConstants.driver.findElement(By.xpath("//*[@id=\"Published\"]")).click();
        Thread.sleep(3000);
        clsConstants.driver.findElement(By.xpath("//*[@id='product-edit']/ul/li[9]/a")).click();
        clsConstants.driver.findElement(By.xpath("//select[@id='Status']")).sendKeys("Active");
    }


    @And("^User enters a comment and selects notify customer$")
    public void userEntersACommentAndSelectsNotifyCustomer() {
        clsConstants.driver.findElement(By.xpath("//textarea[@id='OverrideAdminComment']")).sendKeys("Admin comment");
        clsConstants.driver.findElement(By.xpath("//input[@id='NotifyCustomer']")).click();

    }

    @And("^User clicks on the save button$")
    public void userClicksOnTheSaveButton() throws InterruptedException {
        Thread.sleep(5000);
     clsConstants.driver.findElement(By.xpath("//*[@id=\"product-form\"]/div[1]/div/button[2]")).click();

    }

    @And("^User navigates to Dashboard and selects customers,Selects Vendors and then selects option all$")
    public void userNavigatesToDashboardAndSelectsCustomersSelectsVendorsAndThenSelectsOptionAll() throws Throwable {
        Thread.sleep(5000);
        driver.findElement(By.xpath("//body[@class='skin-blue sidebar-mini']/div[@class='wrapper']/div[@class='main-sidebar']/div[@class='sidebar']/ul[@class='sidebar-menu tree']/li[4]/a[1]/span[1]")).click();
        //  ObjMethod.click("cutomerssubmenu");
        driver.findElement(By.xpath("//html/body/div[3]/div[2]/div/ul/li[4]/ul/li[1]/a/span")).click();
        driver.findElement(By.xpath("//span[contains(text(),'Vendors')]")).click();
        driver.findElement(By.xpath("//body/div[3]/div[2]/div[1]/ul[1]/li[4]/ul[1]/li[4]/ul[1]/li[1]/a[1]/span[1]")).click();
    }

    @And("^User enters \"([^\"]*)\" and clicks search button$")
    public void userEntersAndClicksSearchButton(String arg0) throws Throwable {
        String companyName = readtxtFile( "CompanyProfileName.txt");
        driver.findElement(By.xpath("//input[@id='SearchName']")).sendKeys(companyName);
        driver.findElement(By.xpath("//button[@id='search-vendors']")).click();
    }

    @And("^User selects Review tab and change status to Active and populates a note$")
    public void userSelectsReviewTabAndChangeStatusToActiveAndPopulatesANote() {
        driver.findElement(By.xpath("//a[contains(text(),'Review')]")).click();
        driver.findElement(By.xpath("//select[@id='Status']")).sendKeys("Active");
        driver.findElement(By.xpath("//textarea[@id='VendorNote']")).sendKeys("Admin note");

    }

    @When("^User clicks submit review and and save button$")
    public void userClicksSubmitReviewAndAndSaveButton() throws InterruptedException {
        driver.findElement(By.xpath("//input[@id='NotifyCustomer']")).click();
        driver.findElement(By.xpath("//button[@id='submitReview']")).click();
        Thread.sleep(5000);

        JavascriptExecutor js = (JavascriptExecutor) clsConstants.driver;
        js.executeScript("window.scrollBy(0,1000)");

        driver.findElement(By.xpath("/html/body/div[3]/div[3]/div/form/div[1]/div/button[1]")).click();
    }

    @Then("^Profile is activated$")
    public void profileIsActivated() throws InterruptedException {
        Thread.sleep(4000);
        Assert.assertEquals(clsConstants.driver.getPageSource().contains("The vendor has been updated successfully."),true);
    }
}
